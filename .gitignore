# =============================================================================
# MODERN PYTHON GITIGNORE - BEST PRACTICES 2025
# =============================================================================
# Generated for: Telegram Automation System
# Updated: January 2025
# Follows: Python.org + GitHub + Modern tooling standards
# =============================================================================

# =============================================================================
# üêç PYTHON CORE FILES
# =============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions (from native dependencies)
*.so
*.pyd
*.dll

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
*.whl

# PyInstaller
*.manifest
*.spec

# =============================================================================
# üì¶ MODERN PACKAGE MANAGERS & BUILD TOOLS
# =============================================================================

# pip
pip-log.txt
pip-delete-this-directory.txt
pip-selfcheck.json

# Poetry (modern Python dependency management)
poetry.lock
dist/

# PDM (modern Python dependency management)
__pypackages__/
.pdm-python
.pdm.toml

# Hatch (modern Python project management)
.hatch/

# pipx
.local/

# uv (ultra-fast Python package installer)
uv.lock

# =============================================================================
# üß™ TESTING & QUALITY ASSURANCE
# =============================================================================

# Testing frameworks
.pytest_cache/
.coverage
.coverage.*
htmlcov/
.tox/
.nox/
coverage.xml
*.cover
*.py,cover
.hypothesis/
.cache
nosetests.xml
test-results/
junit.xml

# Mutation testing
.mutmut-cache

# Performance profiling
.prof

# =============================================================================
# üîç CODE ANALYSIS & LINTING
# =============================================================================

# MyPy type checker
.mypy_cache/
.dmypy.json
dmypy.json

# Ruff (modern Python linter/formatter)
.ruff_cache/

# PyLint
.pylint.d/
pylint-report.txt

# Bandit security linter
.bandit

# Black formatter cache
.black_cache/

# isort cache
.isort.cfg

# Flake8 cache
.flake8_cache/

# Pre-commit
.pre-commit-cache/

# =============================================================================
# üèóÔ∏è DEVELOPMENT ENVIRONMENTS
# =============================================================================

# Virtual environments
.env
.env.*
!.env.example
.venv/
venv/
env/
ENV/
env.bak/
venv.bak/
.Python

# Conda environments
.conda/

# pyenv version files
.python-version

# asdf version files
.python-version

# =============================================================================
# üì± MODERN IDEs & EDITORS
# =============================================================================

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# JetBrains IDEs (PyCharm, etc.)
.idea/
*.iws
*.iml
*.ipr

# Sublime Text
*.sublime-workspace
*.sublime-project

# Vim/Neovim
*.swp
*.swo
*~
.vim/
.nvim/

# Emacs
*~
\#*\#
/.emacs.d/auto-save-list
/.emacs.d/tramp
/.emacs.d/eshell
/.emacs.d/elpa

# Cursor AI Editor
.cursor/

# Zed Editor
.zed/

# =============================================================================
# üíæ OPERATING SYSTEMS
# =============================================================================

# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Icon?

# Windows  
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.directory
.Trash-*
.nfs*

# =============================================================================
# üóÉÔ∏è DATABASES & STORAGE
# =============================================================================

# SQLite
*.sqlite
*.sqlite3
*.db

# PostgreSQL
*.postgresql

# MongoDB
*.bson

# Database dumps
*.sql
*.dump

# =============================================================================
# üìä LOGGING & MONITORING
# =============================================================================

# Application logs
logs/
*.log
*.log.*
log/

# System logs
syslog
*.out

# =============================================================================
# üîí SECURITY & CREDENTIALS
# =============================================================================

# Environment variables with secrets
.env.local
.env.production
.env.staging
.secrets
secrets/
.secrets/

# SSH keys
*.pem
*.key
*.p12
*.pfx
id_rsa*
id_ed25519*

# API keys and tokens  
.api_keys
*.token
credentials.json
service_account.json

# Local configuration with secrets
config.local.*
settings.local.*
local_settings.py

# =============================================================================
# üì° TELEGRAM PROJECT SPECIFIC
# =============================================================================

# Telegram session files
sessions/
*.session
*.session-journal

# Bot data and cache
bot_data/
user_data/

# Telegram API credentials (additional safety)
telegram_credentials.*
bot_tokens.*

# =============================================================================
# üåê WEB FRAMEWORKS & ASSETS
# =============================================================================

# Django
db.sqlite3
db.sqlite3-journal
local_settings.py
media/
staticfiles/
static/

# Flask
instance/
.webassets-cache

# FastAPI
__pycache__/

# =============================================================================
# üìö DOCUMENTATION & SITES
# =============================================================================

# Sphinx documentation
docs/_build/
docs/_static/
docs/_templates/

# MkDocs
/site/
site/

# Jupyter Notebook
.ipynb_checkpoints/
*.ipynb_checkpoints

# =============================================================================
# üóúÔ∏è TEMPORARY & CACHE FILES
# =============================================================================

# Temporary files
*.tmp
*.temp
*.bak
*.orig
*.rej
*~

# Cache directories
.cache/
cache/
tmp/
temp/

# Backup files
backup/
backups/
*.backup

# =============================================================================
# üè≠ CI/CD & DEPLOYMENT
# =============================================================================

# Docker
Dockerfile.local
docker-compose.override.yml
.dockerignore.local

# Kubernetes
*.local.yaml
*.local.yml

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Ansible
*.retry

# GitHub Actions local testing
.github/workflows/*.local.yml

# =============================================================================
# üîß DEVELOPMENT TOOLS
# =============================================================================

# Node.js (for pre-commit hooks, documentation tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*
package-lock.json
yarn.lock

# Ruby (for some dev tools)
.bundle/
vendor/bundle

# Go modules (for some tools)
go.mod
go.sum

# =============================================================================
# üìä ANALYTICS & REPORTING
# =============================================================================

# Coverage reports
htmlcov/
.coverage
coverage.xml
*.lcov

# Performance reports
.benchmarks/
benchmark-results/

# Security scan reports
security-report.json
bandit-report.json

# =============================================================================
# END OF GITIGNORE
# =============================================================================